// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Franchise {
  id Int @id @default(autoincrement())
  name String @unique
  nhlId Int @unique
  teams Team[]
  stats FranchiseStatLine?
}

model FranchiseStatLine {
  id Int @id @default(autoincrement())
  franchise Franchise @relation(fields: [franchiseId], references: [id])
  franchiseId Int @unique
  goals Int
  assists Int
  points Int
  hits Int
  penaltyMinutes Float
}

model Game {
  id Int @id @default(autoincrement())
  nhlId Int @unique
  season Season @relation(fields: [seasonId], references: [id])
  seasonId Int
  stats GameStatLine?
  homeTeam Team @relation(name: "homeGames", fields: [homeTeamId], references: [id])
  homeTeamId Int
  awayTeam Team @relation(name: "awayGames", fields: [awayTeamId], references: [id])
  awayTeamId Int
}

model GameStatLine {
  id Int @id @default(autoincrement())
  game Game @relation(fields: [gameId], references: [id])
  teamPlayerStats TeamPlayer[]
  gameId Int @unique
  goals Int
  assists Int
  points Int
  hits Int
  penaltyMinutes Float
}

model Player {
  id Int @id @default(autoincrement())
  firstName String
  lastName String
  nhlId Int @unique
  teams TeamPlayer[]
  stats PlayerStatLine?
  seasonStats SeasonStatLine[]
}

model PlayerStatLine {
  id Int @id @default(autoincrement())
  player Player @relation(fields: [playerId], references: [id])
  playerId Int @unique
  goals Int
  assists Int
  points Int
  hits Int
  penaltyMinutes Float
}

model Season {
  id Int @id @default(autoincrement())
  startYear Int @unique
  games Game[]
  teams Team[]
  playerStats SeasonStatLine[]
}

model SeasonStatLine {
  id Int @id @default(autoincrement())
  season Season @relation(fields: [seasonId], references: [id])
  seasonId Int
  player Player @relation(fields: [playerId], references: [id])
  playerId Int @unique
  goals Int
  assists Int
  points Int
  hits Int
  penaltyMinutes Float
}

model Team {
  id Int @id @default(autoincrement())
  location String
  name String
  nhlId Int @unique
  franchise Franchise @relation(fields: [franchiseId], references: [id])
  franchiseId Int
  season Season @relation(fields: [seasonId], references: [id])
  seasonId Int
  players TeamPlayer[]
  homeGames Game[] @relation(name: "homeGames")
  awayGames Game[] @relation(name: "awayGames")
  stats TeamStatLine?
}

model TeamStatLine {
  id Int @id @default(autoincrement())
  team Team @relation(fields: [teamId], references: [id])
  teamId Int @unique
  goals Int
  assists Int
  points Int
  hits Int
  penaltyMinutes Float
}

model TeamPlayer {
  id Int @id @default(autoincrement())
  team Team @relation(fields: [teamId], references: [id])
  teamId Int
  player Player @relation(fields: [playerId], references: [id])
  playerId Int
  gameStats GameStatLine[]
  stats TeamPlayerStatLine?
  @@unique([playerId, teamId])
}

model TeamPlayerStatLine {
  id Int @id @default(autoincrement())
  teamPlayer TeamPlayer @relation(fields: [teamPlayerId], references: [id])
  teamPlayerId Int @unique
  goals Int
  assists Int
  points Int
  hits Int
  penaltyMinutes Float
}